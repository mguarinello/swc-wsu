ggplot(gapminder,aes(x=gdpPercap, y=lifeExp))+
geom_point()+ scale_x_log10()+
facet_grid(continent ~.)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp))+
geom_point()+ scale_x_log10()+
facet_grid(continent ~ year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp))+
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp), color=continent)+
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp), color=continent)) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp), color=continent)) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
View(gapminder)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercp, y=lifeExp))+
geom_line()+
facet_grid(country ~.)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercp, y=lifeExp))+
geom_line()
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line()
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line()
facet_grid(country ~.)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line()
facet_grid(country ~.)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line()
facet_grid(~country)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
facet_grid(~country)
gapminder %>%
filter(country %in% c("Albania","Moldova","Russia","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
facet_grid(country ~.)
gapminder %>%
filter(country %in% c("Albania","Australia","Botswana","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
facet_grid(country ~.)
gapminder %>%
filter(country %in% c("Albania","Australia","Botswana","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
aes(color=continent)+
facet_grid(country ~.)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent)) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
library(broman)
gapminder %>%
filter(country %in% c("Albania","Australia","Botswana","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
aes(color=continent)+
facet_wrap(country ~.)
gapminder %>%
filter(country %in% c("Albania","Australia","Botswana","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
aes(color=continent)+
facet_grid(country ~.)
p5 <- gapminder %>%
filter(country %in% c("Albania","Australia","Botswana","Nepal","Peru")) %>%
ggplot(aes(x=gdpPercap, y=lifeExp))+
geom_line() +
aes(color=continent)+
facet_grid(country ~.)
ggsave("~/Desktop/swc-wsu/5countries_plot.pdf",p5, height=7, width=10)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent)) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent)) +
geom_point()+ scale_x_log10()+
facet_grid(~year)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent)) +
geom_point()+ scale_x_log10()+
facet_grid(year~.)
ggplot(gapminder,aes(x=gdpPercap, y=lifeExp, color=continent)) +
geom_point()+ scale_x_log10()+
facet_wrap(~year)
temp <- read.csv("~/Desktop/ofu_r/Ofu_Temp.csv")
rm p
library(dplyr)
libary(ggplot2)
library(ggplot2)
?rm
rm(list=ls())
temp <- read.csv("~/Desktop/ofu_r/Ofu_Temp.csv")
str(temp)
temp %>%
select(Temp_C_596_300SW)
str(temp)
temp %>%
select(Temp_C_596_300SW) %>%
ggplot(aes, y=Temp_C_596_300SW) +
geom_line()
setwd("~/Desktop/ofu_r")
library(dplyr)
library(ggplot2)
temp <- read.csv("~/Desktop/ofu_r/Ofu_Temp.csv")
#view structure of dataset
str(temp)
temp %>%
select(Temp_C_596_300SW) %>%
ggplot(aes(x=DateTime_AS_LST, y=Temp_C_596_300SW) +
geom_line()
(p <- temp %>%
select(Temp_C_596_300SW) %>%
ggplot(aes(x=DateTime_AS_LST, y=Temp_C_596_300SW) +
geom_line())
temp %>%
select(Temp_C_596_300SW) %>%
ggplot(aes(x=DateTime_AS_LST, y=Temp_C_596_300SW) + geom_line()
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW)) +
geom_line()
str(temp)
setwd("~/Desktop/ofu_r")
#load dplyr and ggplot2
library(dplyr)
library(ggplot2)
#create dataframe object for data in Ofu_Temp.csv
temp <- read.csv("~/Desktop/ofu_r/Ofu_Temp.csv")
#view structure of dataset
str(temp)
#make plot of
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW)) +
geom_line()
head(temp)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_line()
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_point()
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_point(size=2) +
aes(temp %>% Temp_C_611_400MC >=32.0)color=red)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_point(size=2) +
aes(color=red)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_point(size=2) +
aes(temp %>% Temp_C_611_400MC >=32.0)color="red")
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_611_400MC)) +
geom_point(size=2, color="red")
str(temp)
400mw_32 <- temp %>%
filter(Temp_C_608_400MW >= 32.0)
400mw_32 <- temp %>%
select(Temp_C_608_400MW >= 32.0)
mw32_400 <- temp %>%
filter(Temp_C_608_400MW >= 32.0)
View(mw32_400)
View(mw32_400)
ggplot(mw32_400, aes((x=DateTime_AS_LST, y=Temp_C_608_400MW))+
geom_point(size=2, color="red"")
mw32_400 <- temp %>%
filter(Temp_C_608_400MW >= 32.0)
head(mw32_400)
fg
gurg
exit
mw32_400 <- temp %>%
filter(Temp_C_608_400MW >= 32.0)
head(mw32_400)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="black")
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="black")
ggplot(mw32_400, aes((x=DateTime_AS_LST, y=Temp_C_608_400MW))+
geom_point(size=2, color="red"")
View(mw32_400)
mw32_400 <- temp %>%
select(DateTime_AS_LST,Temp_C_608_400MW )
filter(Temp_C_608_400MW >= 32.0)
View(mw32_400)
View(mw32_400)
View(mw32_400)
View(mw32_400)
rm(mw32_400)
rm(mw32_400)
trg
horghoiag[]
rm(list(ls()))
rm(list(ls()))
?rm
rm(list=ls())
setwd("~/Desktop/ofu_r")
library(dplyr)
library(ggplot2)
temp <- read.csv("~/Desktop/ofu_r/Ofu_Temp.csv")
#view structure of dataset
str(temp)
mw32_400 <- temp %>%
filter(Temp_C_608_400MW >= 32.0)
select(DateTime_AS_LST,Temp_C_608_400MW)
View(mw32_400)
rm(mw32_400)
mw32_400 <- temp %>%
filter(Temp_C_608_400MW >= 32.0) %>%
select(DateTime_AS_LST,Temp_C_608_400MW)
View(mw32_400)
View(mw32_400)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="black")
ggplot(mw32_400, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="red")
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="black")+
ggplot(mw32_400, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="red")
setwd(~/Desktop/swc-wsu/R)
setwd("~/Desktop/swc-wsu/R")
setwd("~/Desktop/ofu_r")
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_608_400MW)) +
geom_point(size=2, color="black")+
geom_point(y=Temp_C_608_400MW >= 32.0, size=2, color="red")
rm(mw32_400)
str(temp)
x <- DateTime_AS_LST
300SW <- Temp_C_596_300SW
300MW <- Temp_C_598_300MW
300MC <- Temp_C_614_300MC
300ME <- Temp_C_607_300ME
300RC <- Temp_C_609_300RC
400SW <- Temp_C_616_400SW
400SE <- Temp_C_612_400SE
400MW <- Temp_C_608_400MW
400MC <- Temp_C_611_400MC
400ME <- Temp_C_604_400ME
400RC <- Temp_C_610_400RC
x <- temp(DateTime_AS_LST)
ggplot(temp, aes(x=Date_Time_AS_LST, y=Temp_C_596_300SW)) +
geom_point(size=2)
str(temp)
temp$col <- cut(temp$300SW,
breaks = c(32.0, 33.0),
labels = c("32 to 33"))
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(32.0, 33.0),
labels = c("32 to 33"))
ggplot(temp, aes(x=Date_Time_AS_LST, y=Temp_C_596_300SW)) +
geom_point(size=2)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW)) +
geom_point(size=2)
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2)
install.packages("knitr")
install.packages("rmarkdown")
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","yellow"))
#subset from 300SW where over 32.0 C
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "> 34"))
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","yellow","organe","red"))
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","yellow","orange","red"))
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","red"))
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","chocolate1","red"))
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
str(temp)
temp$col <- cut(temp$Temp_C_598_300MW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_598_300mw, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
temp$col <- cut(temp$Temp_C_598_300MW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_598_300MW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
temp$col <- cut(temp$Temp_C_614_300MC,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_614_300MC, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
temp$col <- cut(temp$Temp_C_607_300ME,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300ME
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_607_300ME, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
temp$col <- cut(temp$Temp_C_609_300RC,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300RC
ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_609_300RC, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
?ggsave
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300SW
p <- ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
save file
ggsave("series_300SW.pdf", p, width=10, height=7)
#create threshold values for 300SW
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300SW
p <- ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
save file
ggsave("~/figures/series_300SW.pdf", p, width=10, height=7)
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300SW
p <- ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
save file
ggsave("~/figures/series_300SW.pdf", p, width=10, height=7)
temp$col <- cut(temp$Temp_C_596_300SW,
breaks = c(-Inf, 32.0, 33.0, 34.0, 35.0, Inf),
labels = c("<32","32 - 33", "33 - 34", "34 - 35", "> 35"))
#make plot of all temp values for 300SW
p <- ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
save file
ggsave("series_300SW.pdf", p, width=10, height=7)
p <- ggplot(temp, aes(x=DateTime_AS_LST, y=Temp_C_596_300SW, color = col)) +
geom_point(size=2) +
scale_color_manual(values= c("black","gold1","orange","darkorange3","red"))
#save file
ggsave("~/Desktop/ofu_r/figures/series_300SW.pdf", p, width=10, height=7)
rm(list=ls())
# Intro to R practice script
x <-8
y <-x/2
x <-15
ls() # list objects in environment
# vector of weights, c() is a function and it means 'combine'
weights <- c(50, 60, 65, 82)
weights
animals <- c("mouse","rat","dog")
animals
#to find help on a function
?mean
# to get number of elements in a vector
length(weights)
length(animals)
#to find class of on object, class is character or number
class(weights)
class(animals)
#to find out about structure of object, e.g., class and length and items
str(weights)
str(animals)
#to add to a vector
weights <- c(weights,90)
weights
weights <-c(30, weights)
weights
#create new vector combining x, y, weights and then find the mean
z <- c(x,y,weights)
z_mean <- mean(z)
z_mean
#to get working directory, list files
getwd()
list.files()
setwd("~/Desktop") #to change working directory
setwd("~/Desktop/swc-wsu/data")
#working with Data; Using gapminder; life expectancy, gdp, etc. for countries
#load data; create object for data
gapminder <- read.csv("gapminder.csv")
head(gapminder)  #to read initial rows of data file, defaults to 7 rows
class(gapminder)
str(gapminder) #gives class, num of columns, rows, types of variables/factors and levels
#how to pull variables out of data; bracket sub-setting [ ] to subset, inside [ ] you put the index value or specify range
weights[1]
weights[1:3] # to select first 3 elements
#for data frames, need to specify rows and columns, give as  rows,columns
gapminder[1,1] #for 1st row, 1st column
gapminder[1,3] #for 1st row, 3rd column
gapminder[500,5:6] # for 500th row, 5th and 6th column
#to get a single column of data frame use $
gapminder$pop
#equivalent to
gapminder[,5] # gives 5th column, all values because you didn't specify rows
gapminder[,"pop"] # using column name to get all data for that column
# to get all data for Finland, using expression for rows with is data, columns as blank to get all columns
gapminder[gapminder$country == "Finland", ]
# to get countries and years with population <= 100,000, need to specify columns
gapminder[gapminder$pop <= 100000, c("country","year")]
#testing to see which are equivalent with the 1st one below
gapminder[50,4] #this finds the 50th row in the 4th column
gapminder[50,"lifeExp"] #yes; this finds the 50th row in the life Exp in the 4th row
gapminder[4,50] #no; this finds the 4th value in the 50th column, there is no 50th column so it is null
gapminder$lifeExp[50] #yes; this finds the column for lifeExp and finds the 50th value
#which countries in data have life expectancy > 80
gapminder[gapminder$lifeExp > 80, "country"]
#Working with Packages to extend functionality in R; Here we will work with dplyr for data manipulation and ggplot2 for plotting
#first have to install to your computer
install.packages("dplyr")
install.packages("ggplot2")
#then you have to load for your R session, can also click in packages pane
library("dplyr")
library(help=dplyr)  # to pull up documentation, list of fxns in dplyr
#DPLYR
#selecting columns and rows using dplyer
select(gapminder,country, year, pop)  #select columns you want to keep
filter(gapminder,country == "Finland")  #filter to keep rows you want
#using pipe, for stepwise subsetting, reads the left side of pipe as argument, so you don't have to put gapminder as first argument in () in second row
gapminder_small <- gapminder %>%  #create and object for your new filtered data
filter(pop <= 100000) %>%
select(country, year)
#practice- rows with gdpPercap is >= 35000. keep country, year, and gdpPercap
gapminder %>%
filter(gdpPercap >= 35000) %>%
select(country, year, gdpPercap)
#to add to new columns to data, based on values of exisitng data, e.g. for calc., units, etc.
gapminder %>%
mutate(totalgdp = gdpPercap * pop) %>%  #mutate adds a new column
head   # to see just the first 6 rows
#note this does not overwrite the gapminder object unless you re-assign gapminder object for this code
#split into groups
gapminder %>%
mutate(totalgdp = gdpPercap * pop) %>%   #adds column and calculates totalgdb
group_by(continent) %>%                  # groups results by continent
summarize(meangdp = mean(totalgdp))     # new column, give it name, set = to mean of total gdp
#do the same as above, but by years too
gapminder %>%
mutate(totalgdp = gdpPercap *pop) %>%
group_by (continent, year) %>%
summarize (meangdp =mean(totalgdp))
#to get mean and min by continent and year
min_mean_gdp <- gapminder %>%
mutate(totalgdp = gdpPercap * pop) %>%
group_by (continent, year) %>%
summarize(meangdp = mean(totalgdp),
mingdp = min(totalgdp))
#practice- get the max life Exp for each continent
gapminder %>%
group_by(continent) %>%
summarize(maxLife = max(lifeExp))
#practice- max, min, mean life Exp for each year
gapminder %>%
group_by(year) %>%
summarize(maxLife = max(lifeExp),
minLife = min(lifeExp),
meanLife = mean(lifeExp))
#practice - pick country, find pop for each year before 1982. return data frame with country, year, pop
gapminder_Australia <-gapminder %>%
filter(country == "Australia", year < 1982) %>%
select(country, year, pop) %>%
#to export a data frame, write.
write.csv(gapminder_Australia,"gapminder_Australia.csv")
install.packages("ggplot2")
